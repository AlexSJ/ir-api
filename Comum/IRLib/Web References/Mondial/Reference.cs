//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace IRLib.Mondial {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TicketProtectorWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class TicketProtectorWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UpdatePolicyRequestStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelPolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEventRequestStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGeneralConditionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductCoverageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPoliciesToImportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventsToImportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPolicyWithParamsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TicketProtectorWebService() {
            this.Url = global::IRLib.Properties.Settings.Default.IRLib_Mondial_TicketProtectorWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UpdatePolicyRequestStatusCompletedEventHandler UpdatePolicyRequestStatusCompleted;
        
        /// <remarks/>
        public event CancelPolicyCompletedEventHandler CancelPolicyCompleted;
        
        /// <remarks/>
        public event UpdateEventRequestStatusCompletedEventHandler UpdateEventRequestStatusCompleted;
        
        /// <remarks/>
        public event CreatePolicyCompletedEventHandler CreatePolicyCompleted;
        
        /// <remarks/>
        public event GetProductCostCompletedEventHandler GetProductCostCompleted;
        
        /// <remarks/>
        public event GetGeneralConditionsCompletedEventHandler GetGeneralConditionsCompleted;
        
        /// <remarks/>
        public event GetProductCoverageCompletedEventHandler GetProductCoverageCompleted;
        
        /// <remarks/>
        public event GetPoliciesToImportCompletedEventHandler GetPoliciesToImportCompleted;
        
        /// <remarks/>
        public event GetEventsToImportCompletedEventHandler GetEventsToImportCompleted;
        
        /// <remarks/>
        public event GetEventsCompletedEventHandler GetEventsCompleted;
        
        /// <remarks/>
        public event GetPolicyWithParamsCompletedEventHandler GetPolicyWithParamsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePolicyRequestStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePolicyRequestStatus(string companyID, string authenticationCode, string prePolicyID, int policyRequestStatus) {
            this.Invoke("UpdatePolicyRequestStatus", new object[] {
                        companyID,
                        authenticationCode,
                        prePolicyID,
                        policyRequestStatus});
        }
        
        /// <remarks/>
        public void UpdatePolicyRequestStatusAsync(string companyID, string authenticationCode, string prePolicyID, int policyRequestStatus) {
            this.UpdatePolicyRequestStatusAsync(companyID, authenticationCode, prePolicyID, policyRequestStatus, null);
        }
        
        /// <remarks/>
        public void UpdatePolicyRequestStatusAsync(string companyID, string authenticationCode, string prePolicyID, int policyRequestStatus, object userState) {
            if ((this.UpdatePolicyRequestStatusOperationCompleted == null)) {
                this.UpdatePolicyRequestStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePolicyRequestStatusOperationCompleted);
            }
            this.InvokeAsync("UpdatePolicyRequestStatus", new object[] {
                        companyID,
                        authenticationCode,
                        prePolicyID,
                        policyRequestStatus}, this.UpdatePolicyRequestStatusOperationCompleted, userState);
        }
        
        private void OnUpdatePolicyRequestStatusOperationCompleted(object arg) {
            if ((this.UpdatePolicyRequestStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePolicyRequestStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelPolicy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReturnCancelObject CancelPolicy(string companyID, string authenticationCode, string policyID, string userID) {
            object[] results = this.Invoke("CancelPolicy", new object[] {
                        companyID,
                        authenticationCode,
                        policyID,
                        userID});
            return ((ReturnCancelObject)(results[0]));
        }
        
        /// <remarks/>
        public void CancelPolicyAsync(string companyID, string authenticationCode, string policyID, string userID) {
            this.CancelPolicyAsync(companyID, authenticationCode, policyID, userID, null);
        }
        
        /// <remarks/>
        public void CancelPolicyAsync(string companyID, string authenticationCode, string policyID, string userID, object userState) {
            if ((this.CancelPolicyOperationCompleted == null)) {
                this.CancelPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelPolicyOperationCompleted);
            }
            this.InvokeAsync("CancelPolicy", new object[] {
                        companyID,
                        authenticationCode,
                        policyID,
                        userID}, this.CancelPolicyOperationCompleted, userState);
        }
        
        private void OnCancelPolicyOperationCompleted(object arg) {
            if ((this.CancelPolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelPolicyCompleted(this, new CancelPolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEventRequestStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateEventRequestStatus(string companyID, string authenticationCode, string eventID) {
            this.Invoke("UpdateEventRequestStatus", new object[] {
                        companyID,
                        authenticationCode,
                        eventID});
        }
        
        /// <remarks/>
        public void UpdateEventRequestStatusAsync(string companyID, string authenticationCode, string eventID) {
            this.UpdateEventRequestStatusAsync(companyID, authenticationCode, eventID, null);
        }
        
        /// <remarks/>
        public void UpdateEventRequestStatusAsync(string companyID, string authenticationCode, string eventID, object userState) {
            if ((this.UpdateEventRequestStatusOperationCompleted == null)) {
                this.UpdateEventRequestStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEventRequestStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateEventRequestStatus", new object[] {
                        companyID,
                        authenticationCode,
                        eventID}, this.UpdateEventRequestStatusOperationCompleted, userState);
        }
        
        private void OnUpdateEventRequestStatusOperationCompleted(object arg) {
            if ((this.UpdateEventRequestStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEventRequestStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreatePolicy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MDLRequestResult[] CreatePolicy(MDLPolicyRequest mdlPolicyRequest) {
            object[] results = this.Invoke("CreatePolicy", new object[] {
                        mdlPolicyRequest});
            return ((MDLRequestResult[])(results[0]));
        }
        
        /// <remarks/>
        public void CreatePolicyAsync(MDLPolicyRequest mdlPolicyRequest) {
            this.CreatePolicyAsync(mdlPolicyRequest, null);
        }
        
        /// <remarks/>
        public void CreatePolicyAsync(MDLPolicyRequest mdlPolicyRequest, object userState) {
            if ((this.CreatePolicyOperationCompleted == null)) {
                this.CreatePolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePolicyOperationCompleted);
            }
            this.InvokeAsync("CreatePolicy", new object[] {
                        mdlPolicyRequest}, this.CreatePolicyOperationCompleted, userState);
        }
        
        private void OnCreatePolicyOperationCompleted(object arg) {
            if ((this.CreatePolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePolicyCompleted(this, new CreatePolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductCost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetProductCost(string companyID, string authenticationCode, string productID, decimal eventValue, decimal rateOfConvenience, decimal rateOfDelivery) {
            object[] results = this.Invoke("GetProductCost", new object[] {
                        companyID,
                        authenticationCode,
                        productID,
                        eventValue,
                        rateOfConvenience,
                        rateOfDelivery});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductCostAsync(string companyID, string authenticationCode, string productID, decimal eventValue, decimal rateOfConvenience, decimal rateOfDelivery) {
            this.GetProductCostAsync(companyID, authenticationCode, productID, eventValue, rateOfConvenience, rateOfDelivery, null);
        }
        
        /// <remarks/>
        public void GetProductCostAsync(string companyID, string authenticationCode, string productID, decimal eventValue, decimal rateOfConvenience, decimal rateOfDelivery, object userState) {
            if ((this.GetProductCostOperationCompleted == null)) {
                this.GetProductCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductCostOperationCompleted);
            }
            this.InvokeAsync("GetProductCost", new object[] {
                        companyID,
                        authenticationCode,
                        productID,
                        eventValue,
                        rateOfConvenience,
                        rateOfDelivery}, this.GetProductCostOperationCompleted, userState);
        }
        
        private void OnGetProductCostOperationCompleted(object arg) {
            if ((this.GetProductCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductCostCompleted(this, new GetProductCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGeneralConditions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGeneralConditions(string companyID, string authenticationCode, string productID) {
            object[] results = this.Invoke("GetGeneralConditions", new object[] {
                        companyID,
                        authenticationCode,
                        productID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGeneralConditionsAsync(string companyID, string authenticationCode, string productID) {
            this.GetGeneralConditionsAsync(companyID, authenticationCode, productID, null);
        }
        
        /// <remarks/>
        public void GetGeneralConditionsAsync(string companyID, string authenticationCode, string productID, object userState) {
            if ((this.GetGeneralConditionsOperationCompleted == null)) {
                this.GetGeneralConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGeneralConditionsOperationCompleted);
            }
            this.InvokeAsync("GetGeneralConditions", new object[] {
                        companyID,
                        authenticationCode,
                        productID}, this.GetGeneralConditionsOperationCompleted, userState);
        }
        
        private void OnGetGeneralConditionsOperationCompleted(object arg) {
            if ((this.GetGeneralConditionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGeneralConditionsCompleted(this, new GetGeneralConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductCoverage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductCoverage(string companyID, string authenticationCode, string productID) {
            object[] results = this.Invoke("GetProductCoverage", new object[] {
                        companyID,
                        authenticationCode,
                        productID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductCoverageAsync(string companyID, string authenticationCode, string productID) {
            this.GetProductCoverageAsync(companyID, authenticationCode, productID, null);
        }
        
        /// <remarks/>
        public void GetProductCoverageAsync(string companyID, string authenticationCode, string productID, object userState) {
            if ((this.GetProductCoverageOperationCompleted == null)) {
                this.GetProductCoverageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductCoverageOperationCompleted);
            }
            this.InvokeAsync("GetProductCoverage", new object[] {
                        companyID,
                        authenticationCode,
                        productID}, this.GetProductCoverageOperationCompleted, userState);
        }
        
        private void OnGetProductCoverageOperationCompleted(object arg) {
            if ((this.GetProductCoverageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductCoverageCompleted(this, new GetProductCoverageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPoliciesToImport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPoliciesToImport() {
            object[] results = this.Invoke("GetPoliciesToImport", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPoliciesToImportAsync() {
            this.GetPoliciesToImportAsync(null);
        }
        
        /// <remarks/>
        public void GetPoliciesToImportAsync(object userState) {
            if ((this.GetPoliciesToImportOperationCompleted == null)) {
                this.GetPoliciesToImportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPoliciesToImportOperationCompleted);
            }
            this.InvokeAsync("GetPoliciesToImport", new object[0], this.GetPoliciesToImportOperationCompleted, userState);
        }
        
        private void OnGetPoliciesToImportOperationCompleted(object arg) {
            if ((this.GetPoliciesToImportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPoliciesToImportCompleted(this, new GetPoliciesToImportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEventsToImport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEventsToImport() {
            object[] results = this.Invoke("GetEventsToImport", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEventsToImportAsync() {
            this.GetEventsToImportAsync(null);
        }
        
        /// <remarks/>
        public void GetEventsToImportAsync(object userState) {
            if ((this.GetEventsToImportOperationCompleted == null)) {
                this.GetEventsToImportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventsToImportOperationCompleted);
            }
            this.InvokeAsync("GetEventsToImport", new object[0], this.GetEventsToImportOperationCompleted, userState);
        }
        
        private void OnGetEventsToImportOperationCompleted(object arg) {
            if ((this.GetEventsToImportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventsToImportCompleted(this, new GetEventsToImportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEvents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEvents(string companyID, string authenticationCode, string companyIDEvent, string eventDescription) {
            object[] results = this.Invoke("GetEvents", new object[] {
                        companyID,
                        authenticationCode,
                        companyIDEvent,
                        eventDescription});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEventsAsync(string companyID, string authenticationCode, string companyIDEvent, string eventDescription) {
            this.GetEventsAsync(companyID, authenticationCode, companyIDEvent, eventDescription, null);
        }
        
        /// <remarks/>
        public void GetEventsAsync(string companyID, string authenticationCode, string companyIDEvent, string eventDescription, object userState) {
            if ((this.GetEventsOperationCompleted == null)) {
                this.GetEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventsOperationCompleted);
            }
            this.InvokeAsync("GetEvents", new object[] {
                        companyID,
                        authenticationCode,
                        companyIDEvent,
                        eventDescription}, this.GetEventsOperationCompleted, userState);
        }
        
        private void OnGetEventsOperationCompleted(object arg) {
            if ((this.GetEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventsCompleted(this, new GetEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPolicyWithParams", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPolicyWithParams(string companyID, string authenticationCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> InitialDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> EndDate, string policyID, string referenceOrderCode) {
            object[] results = this.Invoke("GetPolicyWithParams", new object[] {
                        companyID,
                        authenticationCode,
                        InitialDate,
                        EndDate,
                        policyID,
                        referenceOrderCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPolicyWithParamsAsync(string companyID, string authenticationCode, System.Nullable<System.DateTime> InitialDate, System.Nullable<System.DateTime> EndDate, string policyID, string referenceOrderCode) {
            this.GetPolicyWithParamsAsync(companyID, authenticationCode, InitialDate, EndDate, policyID, referenceOrderCode, null);
        }
        
        /// <remarks/>
        public void GetPolicyWithParamsAsync(string companyID, string authenticationCode, System.Nullable<System.DateTime> InitialDate, System.Nullable<System.DateTime> EndDate, string policyID, string referenceOrderCode, object userState) {
            if ((this.GetPolicyWithParamsOperationCompleted == null)) {
                this.GetPolicyWithParamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPolicyWithParamsOperationCompleted);
            }
            this.InvokeAsync("GetPolicyWithParams", new object[] {
                        companyID,
                        authenticationCode,
                        InitialDate,
                        EndDate,
                        policyID,
                        referenceOrderCode}, this.GetPolicyWithParamsOperationCompleted, userState);
        }
        
        private void OnGetPolicyWithParamsOperationCompleted(object arg) {
            if ((this.GetPolicyWithParamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPolicyWithParamsCompleted(this, new GetPolicyWithParamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ReturnCancelObject {
        
        private bool canceledField;
        
        private string messageField;
        
        /// <remarks/>
        public bool Canceled {
            get {
                return this.canceledField;
            }
            set {
                this.canceledField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MDLRequestResult {
        
        private string policyIDField;
        
        /// <remarks/>
        public string PolicyID {
            get {
                return this.policyIDField;
            }
            set {
                this.policyIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MDLSector {
        
        private int sectorIDField;
        
        private int eventIDField;
        
        private int companyIDField;
        
        private string sectorCodeField;
        
        private decimal sectorPriceField;
        
        private string sectorNameField;
        
        private int quantityField;
        
        /// <remarks/>
        public int SectorID {
            get {
                return this.sectorIDField;
            }
            set {
                this.sectorIDField = value;
            }
        }
        
        /// <remarks/>
        public int EventID {
            get {
                return this.eventIDField;
            }
            set {
                this.eventIDField = value;
            }
        }
        
        /// <remarks/>
        public int CompanyID {
            get {
                return this.companyIDField;
            }
            set {
                this.companyIDField = value;
            }
        }
        
        /// <remarks/>
        public string SectorCode {
            get {
                return this.sectorCodeField;
            }
            set {
                this.sectorCodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal SectorPrice {
            get {
                return this.sectorPriceField;
            }
            set {
                this.sectorPriceField = value;
            }
        }
        
        /// <remarks/>
        public string SectorName {
            get {
                return this.sectorNameField;
            }
            set {
                this.sectorNameField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MDLEvent {
        
        private int eventIDField;
        
        private string claveField;
        
        private string eventNameField;
        
        private string localField;
        
        private System.DateTime eventDateField;
        
        private MDLSector[] sectorsField;
        
        /// <remarks/>
        public int EventID {
            get {
                return this.eventIDField;
            }
            set {
                this.eventIDField = value;
            }
        }
        
        /// <remarks/>
        public string Clave {
            get {
                return this.claveField;
            }
            set {
                this.claveField = value;
            }
        }
        
        /// <remarks/>
        public string EventName {
            get {
                return this.eventNameField;
            }
            set {
                this.eventNameField = value;
            }
        }
        
        /// <remarks/>
        public string Local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EventDate {
            get {
                return this.eventDateField;
            }
            set {
                this.eventDateField = value;
            }
        }
        
        /// <remarks/>
        public MDLSector[] Sectors {
            get {
                return this.sectorsField;
            }
            set {
                this.sectorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MDLCustomer {
        
        private string clientTicketNumberField;
        
        private string productIDField;
        
        private decimal individualCostField;
        
        private int insuredIDField;
        
        private string insuredNameField;
        
        private string insuredDocumentIDField;
        
        private System.DateTime insuredBirthDateField;
        
        private int eventIDField;
        
        private string eventClaveField;
        
        private string eventNameField;
        
        private string eventLocalField;
        
        private System.DateTime eventDateField;
        
        private MDLEvent[] eventsField;
        
        private int sectorIDField;
        
        private string sectorNameField;
        
        private decimal sectorPriceField;
        
        private string sectorCodeField;
        
        /// <remarks/>
        public string ClientTicketNumber {
            get {
                return this.clientTicketNumberField;
            }
            set {
                this.clientTicketNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ProductID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal IndividualCost {
            get {
                return this.individualCostField;
            }
            set {
                this.individualCostField = value;
            }
        }
        
        /// <remarks/>
        public int InsuredID {
            get {
                return this.insuredIDField;
            }
            set {
                this.insuredIDField = value;
            }
        }
        
        /// <remarks/>
        public string InsuredName {
            get {
                return this.insuredNameField;
            }
            set {
                this.insuredNameField = value;
            }
        }
        
        /// <remarks/>
        public string InsuredDocumentID {
            get {
                return this.insuredDocumentIDField;
            }
            set {
                this.insuredDocumentIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime InsuredBirthDate {
            get {
                return this.insuredBirthDateField;
            }
            set {
                this.insuredBirthDateField = value;
            }
        }
        
        /// <remarks/>
        public int EventID {
            get {
                return this.eventIDField;
            }
            set {
                this.eventIDField = value;
            }
        }
        
        /// <remarks/>
        public string EventClave {
            get {
                return this.eventClaveField;
            }
            set {
                this.eventClaveField = value;
            }
        }
        
        /// <remarks/>
        public string EventName {
            get {
                return this.eventNameField;
            }
            set {
                this.eventNameField = value;
            }
        }
        
        /// <remarks/>
        public string EventLocal {
            get {
                return this.eventLocalField;
            }
            set {
                this.eventLocalField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EventDate {
            get {
                return this.eventDateField;
            }
            set {
                this.eventDateField = value;
            }
        }
        
        /// <remarks/>
        public MDLEvent[] Events {
            get {
                return this.eventsField;
            }
            set {
                this.eventsField = value;
            }
        }
        
        /// <remarks/>
        public int SectorID {
            get {
                return this.sectorIDField;
            }
            set {
                this.sectorIDField = value;
            }
        }
        
        /// <remarks/>
        public string SectorName {
            get {
                return this.sectorNameField;
            }
            set {
                this.sectorNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal SectorPrice {
            get {
                return this.sectorPriceField;
            }
            set {
                this.sectorPriceField = value;
            }
        }
        
        /// <remarks/>
        public string SectorCode {
            get {
                return this.sectorCodeField;
            }
            set {
                this.sectorCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MDLPolicyRequest {
        
        private decimal rateOfDeliveryField;
        
        private decimal rateOfConvenienceField;
        
        private string companyIDField;
        
        private string authenticationCodeField;
        
        private MDLCustomer[] customerCollectionField;
        
        private string creditCardNumberField;
        
        private string creditCardTypeField;
        
        private string creditCardExpMonthField;
        
        private string creditCardExpYearField;
        
        private string creditCardHolderNameField;
        
        private string creditCardSecurityCodeField;
        
        private decimal totalCostField;
        
        private string customerDocumentIDField;
        
        private string customerNameField;
        
        private string customerAddressField;
        
        private string customerAddressNumberField;
        
        private string customerAddresComplimentField;
        
        private string customerZipCodeField;
        
        private string customerDistrictField;
        
        private string customerCityField;
        
        private string customerStateField;
        
        private string customerPhoneField;
        
        private string customerMobilePhoneField;
        
        private System.DateTime customerBirthDateField;
        
        private string customerEmailField;
        
        private System.DateTime requestDateField;
        
        private string referenceOrderCodeField;
        
        private string primaryPolicyIDField;
        
        private int paymentTypeIDField;
        
        private int requestOriginIDField;
        
        private int requestStatusField;
        
        /// <remarks/>
        public decimal RateOfDelivery {
            get {
                return this.rateOfDeliveryField;
            }
            set {
                this.rateOfDeliveryField = value;
            }
        }
        
        /// <remarks/>
        public decimal RateOfConvenience {
            get {
                return this.rateOfConvenienceField;
            }
            set {
                this.rateOfConvenienceField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyID {
            get {
                return this.companyIDField;
            }
            set {
                this.companyIDField = value;
            }
        }
        
        /// <remarks/>
        public string AuthenticationCode {
            get {
                return this.authenticationCodeField;
            }
            set {
                this.authenticationCodeField = value;
            }
        }
        
        /// <remarks/>
        public MDLCustomer[] CustomerCollection {
            get {
                return this.customerCollectionField;
            }
            set {
                this.customerCollectionField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCardNumber {
            get {
                return this.creditCardNumberField;
            }
            set {
                this.creditCardNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCardType {
            get {
                return this.creditCardTypeField;
            }
            set {
                this.creditCardTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCardExpMonth {
            get {
                return this.creditCardExpMonthField;
            }
            set {
                this.creditCardExpMonthField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCardExpYear {
            get {
                return this.creditCardExpYearField;
            }
            set {
                this.creditCardExpYearField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCardHolderName {
            get {
                return this.creditCardHolderNameField;
            }
            set {
                this.creditCardHolderNameField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCardSecurityCode {
            get {
                return this.creditCardSecurityCodeField;
            }
            set {
                this.creditCardSecurityCodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal TotalCost {
            get {
                return this.totalCostField;
            }
            set {
                this.totalCostField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerDocumentID {
            get {
                return this.customerDocumentIDField;
            }
            set {
                this.customerDocumentIDField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerAddress {
            get {
                return this.customerAddressField;
            }
            set {
                this.customerAddressField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerAddressNumber {
            get {
                return this.customerAddressNumberField;
            }
            set {
                this.customerAddressNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerAddresCompliment {
            get {
                return this.customerAddresComplimentField;
            }
            set {
                this.customerAddresComplimentField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerZipCode {
            get {
                return this.customerZipCodeField;
            }
            set {
                this.customerZipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerDistrict {
            get {
                return this.customerDistrictField;
            }
            set {
                this.customerDistrictField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerCity {
            get {
                return this.customerCityField;
            }
            set {
                this.customerCityField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerState {
            get {
                return this.customerStateField;
            }
            set {
                this.customerStateField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerPhone {
            get {
                return this.customerPhoneField;
            }
            set {
                this.customerPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerMobilePhone {
            get {
                return this.customerMobilePhoneField;
            }
            set {
                this.customerMobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CustomerBirthDate {
            get {
                return this.customerBirthDateField;
            }
            set {
                this.customerBirthDateField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerEmail {
            get {
                return this.customerEmailField;
            }
            set {
                this.customerEmailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RequestDate {
            get {
                return this.requestDateField;
            }
            set {
                this.requestDateField = value;
            }
        }
        
        /// <remarks/>
        public string ReferenceOrderCode {
            get {
                return this.referenceOrderCodeField;
            }
            set {
                this.referenceOrderCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PrimaryPolicyID {
            get {
                return this.primaryPolicyIDField;
            }
            set {
                this.primaryPolicyIDField = value;
            }
        }
        
        /// <remarks/>
        public int PaymentTypeID {
            get {
                return this.paymentTypeIDField;
            }
            set {
                this.paymentTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public int RequestOriginID {
            get {
                return this.requestOriginIDField;
            }
            set {
                this.requestOriginIDField = value;
            }
        }
        
        /// <remarks/>
        public int RequestStatus {
            get {
                return this.requestStatusField;
            }
            set {
                this.requestStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdatePolicyRequestStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CancelPolicyCompletedEventHandler(object sender, CancelPolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnCancelObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnCancelObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateEventRequestStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CreatePolicyCompletedEventHandler(object sender, CreatePolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MDLRequestResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MDLRequestResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetProductCostCompletedEventHandler(object sender, GetProductCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetGeneralConditionsCompletedEventHandler(object sender, GetGeneralConditionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGeneralConditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGeneralConditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetProductCoverageCompletedEventHandler(object sender, GetProductCoverageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductCoverageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductCoverageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPoliciesToImportCompletedEventHandler(object sender, GetPoliciesToImportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPoliciesToImportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPoliciesToImportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetEventsToImportCompletedEventHandler(object sender, GetEventsToImportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventsToImportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventsToImportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetEventsCompletedEventHandler(object sender, GetEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPolicyWithParamsCompletedEventHandler(object sender, GetPolicyWithParamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPolicyWithParamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPolicyWithParamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591

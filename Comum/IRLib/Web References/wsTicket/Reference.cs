//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace IRLib.wsTicket {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TicketSendSystemServiceImplServiceSoapBinding", Namespace="http://services.ticketsendsystem.edeploy/")]
    public partial class TicketSendSystemServiceImplService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getTicketStatusFromTicketIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback setTicketStatus2OperationCompleted;
        
        private System.Threading.SendOrPostCallback addCustomerPhoneStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback resendTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTicketStatusFromEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setTicketStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendTicket2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getTicketStatusFromBarcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInfoFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getValidatedBarcodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TicketSendSystemServiceImplService() {
            this.Url = global::IRLib.Properties.Settings.Default.IRLib_wsTicket_TicketSendSystemServiceImplService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getTicketStatusFromTicketIdCompletedEventHandler getTicketStatusFromTicketIdCompleted;
        
        /// <remarks/>
        public event setTicketStatus2CompletedEventHandler setTicketStatus2Completed;
        
        /// <remarks/>
        public event addCustomerPhoneStatusCompletedEventHandler addCustomerPhoneStatusCompleted;
        
        /// <remarks/>
        public event resendTicketCompletedEventHandler resendTicketCompleted;
        
        /// <remarks/>
        public event getTicketStatusFromEventCompletedEventHandler getTicketStatusFromEventCompleted;
        
        /// <remarks/>
        public event getEventsCompletedEventHandler getEventsCompleted;
        
        /// <remarks/>
        public event setTicketStatusCompletedEventHandler setTicketStatusCompleted;
        
        /// <remarks/>
        public event sendTicket2CompletedEventHandler sendTicket2Completed;
        
        /// <remarks/>
        public event getTicketStatusFromBarcodeCompletedEventHandler getTicketStatusFromBarcodeCompleted;
        
        /// <remarks/>
        public event getInfoFileCompletedEventHandler getInfoFileCompleted;
        
        /// <remarks/>
        public event getValidatedBarcodesCompletedEventHandler getValidatedBarcodesCompleted;
        
        /// <remarks/>
        public event sendTicketCompletedEventHandler sendTicketCompleted;
        
        /// <remarks/>
        public event getInfoCompletedEventHandler getInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://services.ticketsendsystem.edeploy/", ResponseNamespace="http://services.ticketsendsystem.edeploy/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TicketInfo getTicketStatusFromTicketId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] AdminUser adminUser, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int ticketId) {
            object[] results = this.Invoke("getTicketStatusFromTicketId", new object[] {
                        adminUser,
                        ticketId});
            return ((TicketInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getTicketStatusFromTicketIdAsync(AdminUser adminUser, int ticketId) {
            this.getTicketStatusFromTicketIdAsync(adminUser, ticketId, null);
        }
        
        /// <remarks/>
        public void getTicketStatusFromTicketIdAsync(AdminUser adminUser, int ticketId, object userState) {
            if ((this.getTicketStatusFromTicketIdOperationCompleted == null)) {
                this.getTicketStatusFromTicketIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTicketStatusFromTicketIdOperationCompleted);
            }
            this.InvokeAsync("getTicketStatusFromTicketId", new object[] {
                        adminUser,
                        ticketId}, this.getTicketStatusFromTicketIdOperationCompleted, userState);
        }
        
        private void OngetTicketStatusFromTicketIdOperationCompleted(object arg) {
            if ((this.getTicketStatusFromTicketIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTicketStatusFromTicketIdCompleted(this, new getTicketStatusFromTicketIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://services.ticketsendsystem.edeploy/", ResponseNamespace="http://services.ticketsendsystem.edeploy/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setTicketStatus2([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] AdminUser adminUser, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int ticketId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] TicketStatus ticketStatus, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool ticketStatusSpecified) {
            this.Invoke("setTicketStatus2", new object[] {
                        adminUser,
                        ticketId,
                        ticketStatus,
                        ticketStatusSpecified});
        }
        
        /// <remarks/>
        public void setTicketStatus2Async(AdminUser adminUser, int ticketId, TicketStatus ticketStatus, bool ticketStatusSpecified) {
            this.setTicketStatus2Async(adminUser, ticketId, ticketStatus, ticketStatusSpecified, null);
        }
        
        /// <remarks/>
        public void setTicketStatus2Async(AdminUser adminUser, int ticketId, TicketStatus ticketStatus, bool ticketStatusSpecified, object userState) {
            if ((this.setTicketStatus2OperationCompleted == null)) {
                this.setTicketStatus2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetTicketStatus2OperationCompleted);
            }
            this.InvokeAsync("setTicketStatus2", new object[] {
                        adminUser,
                        ticketId,
                        ticketStatus,
                        ticketStatusSpecified}, this.setTicketStatus2OperationCompleted, userState);
        }
        
        private void OnsetTicketStatus2OperationCompleted(object arg) {
            if ((this.setTicketStatus2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setTicketStatus2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://services.ticketsendsystem.edeploy/", ResponseNamespace="http://services.ticketsendsystem.edeploy/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int addCustomerPhoneStatus([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] AdminUser adminUser, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Event @event, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Phone phoneNumber, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string barcode, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] TicketStatus ticketStatus, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool ticketStatusSpecified) {
            object[] results = this.Invoke("addCustomerPhoneStatus", new object[] {
                        adminUser,
                        @event,
                        phoneNumber,
                        barcode,
                        ticketStatus,
                        ticketStatusSpecified});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addCustomerPhoneStatusAsync(AdminUser adminUser, Event @event, Phone phoneNumber, string barcode, TicketStatus ticketStatus, bool ticketStatusSpecified) {
            this.addCustomerPhoneStatusAsync(adminUser, @event, phoneNumber, barcode, ticketStatus, ticketStatusSpecified, null);
        }
        
        /// <remarks/>
        public void addCustomerPhoneStatusAsync(AdminUser adminUser, Event @event, Phone phoneNumber, string barcode, TicketStatus ticketStatus, bool ticketStatusSpecified, object userState) {
            if ((this.addCustomerPhoneStatusOperationCompleted == null)) {
                this.addCustomerPhoneStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCustomerPhoneStatusOperationCompleted);
            }
            this.InvokeAsync("addCustomerPhoneStatus", new object[] {
                        adminUser,
                        @event,
                        phoneNumber,
                        barcode,
                        ticketStatus,
                        ticketStatusSpecified}, this.addCustomerPhoneStatusOperationCompleted, userState);
        }
        
        private void OnaddCustomerPhoneStatusOperationCompleted(object arg) {
            if ((this.addCustomerPhoneStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCustomerPhoneStatusCompleted(this, new addCustomerPhoneStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://services.ticketsendsystem.edeploy/", ResponseNamespace="http://services.ticketsendsystem.edeploy/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void resendTicket([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] AdminUser adminUser, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Event @event, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string barcode) {
            this.Invoke("resendTicket", new object[] {
                        adminUser,
                        @event,
                        barcode});
        }
        
        /// <remarks/>
        public void resendTicketAsync(AdminUser adminUser, Event @event, string barcode) {
            this.resendTicketAsync(adminUser, @event, barcode, null);
        }
        
        /// <remarks/>
        public void resendTicketAsync(AdminUser adminUser, Event @event, string barcode, object userState) {
            if ((this.resendTicketOperationCompleted == null)) {
                this.resendTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresendTicketOperationCompleted);
            }
            this.InvokeAsync("resendTicket", new object[] {
                        adminUser,
                        @event,
                        barcode}, this.resendTicketOperationCompleted, userState);
        }
        
        private void OnresendTicketOperationCompleted(object arg) {
            if ((this.resendTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resendTicketCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://services.ticketsendsystem.edeploy/", ResponseNamespace="http://services.ticketsendsystem.edeploy/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TicketInfo[] getTicketStatusFromEvent([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] AdminUser adminUser, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Event @event) {
            object[] results = this.Invoke("getTicketStatusFromEvent", new object[] {
                        adminUser,
                        @event});
            return ((TicketInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getTicketStatusFromEventAsync(AdminUser adminUser, Event @event) {
            this.getTicketStatusFromEventAsync(adminUser, @event, null);
        }
        
        /// <remarks/>
        public void getTicketStatusFromEventAsync(AdminUser adminUser, Event @event, object userState) {
            if ((this.getTicketStatusFromEventOperationCompleted == null)) {
                this.getTicketStatusFromEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTicketStatusFromEventOperationCompleted);
            }
            this.InvokeAsync("getTicketStatusFromEvent", new object[] {
                        adminUser,
                        @event}, this.getTicketStatusFromEventOperationCompleted, userState);
        }
        
        private void OngetTicketStatusFromEventOperationCompleted(object arg) {
            if ((this.getTicketStatusFromEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTicketStatusFromEventCompleted(this, new getTicketStatusFromEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://services.ticketsendsystem.edeploy/", ResponseNamespace="http://services.ticketsendsystem.edeploy/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Event[] getEvents([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] AdminUser adminUser) {
            object[] results = this.Invoke("getEvents", new object[] {
                        adminUser});
            return ((Event[])(results[0]));
        }
        
        /// <remarks/>
        public void getEventsAsync(AdminUser adminUser) {
            this.getEventsAsync(adminUser, null);
        }
        
        /// <remarks/>
        public void getEventsAsync(AdminUser adminUser, object userState) {
            if ((this.getEventsOperationCompleted == null)) {
                this.getEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEventsOperationCompleted);
            }
            this.InvokeAsync("getEvents", new object[] {
                        adminUser}, this.getEventsOperationCompleted, userState);
        }
        
        private void OngetEventsOperationCompleted(object arg) {
            if ((this.getEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEventsCompleted(this, new getEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://services.ticketsendsystem.edeploy/", ResponseNamespace="http://services.ticketsendsystem.edeploy/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setTicketStatus([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] AdminUser adminUser, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Event @event, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string barcode, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] TicketStatus ticketStatus, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool ticketStatusSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime validatedTime, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool validatedTimeSpecified) {
            this.Invoke("setTicketStatus", new object[] {
                        adminUser,
                        @event,
                        barcode,
                        ticketStatus,
                        ticketStatusSpecified,
                        validatedTime,
                        validatedTimeSpecified});
        }
        
        /// <remarks/>
        public void setTicketStatusAsync(AdminUser adminUser, Event @event, string barcode, TicketStatus ticketStatus, bool ticketStatusSpecified, System.DateTime validatedTime, bool validatedTimeSpecified) {
            this.setTicketStatusAsync(adminUser, @event, barcode, ticketStatus, ticketStatusSpecified, validatedTime, validatedTimeSpecified, null);
        }
        
        /// <remarks/>
        public void setTicketStatusAsync(AdminUser adminUser, Event @event, string barcode, TicketStatus ticketStatus, bool ticketStatusSpecified, System.DateTime validatedTime, bool validatedTimeSpecified, object userState) {
            if ((this.setTicketStatusOperationCompleted == null)) {
                this.setTicketStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetTicketStatusOperationCompleted);
            }
            this.InvokeAsync("setTicketStatus", new object[] {
                        adminUser,
                        @event,
                        barcode,
                        ticketStatus,
                        ticketStatusSpecified,
                        validatedTime,
                        validatedTimeSpecified}, this.setTicketStatusOperationCompleted, userState);
        }
        
        private void OnsetTicketStatusOperationCompleted(object arg) {
            if ((this.setTicketStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setTicketStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://services.ticketsendsystem.edeploy/", ResponseNamespace="http://services.ticketsendsystem.edeploy/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int[] sendTicket2([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] AdminUser adminUser, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string project, [System.Xml.Serialization.XmlElementAttribute("events", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Event[] events, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Phone phoneNumber, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] MessageInfo messageInfo, [System.Xml.Serialization.XmlElementAttribute("eventInfos", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] EventInfo[] eventInfos) {
            object[] results = this.Invoke("sendTicket2", new object[] {
                        adminUser,
                        project,
                        events,
                        phoneNumber,
                        messageInfo,
                        eventInfos});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void sendTicket2Async(AdminUser adminUser, string project, Event[] events, Phone phoneNumber, MessageInfo messageInfo, EventInfo[] eventInfos) {
            this.sendTicket2Async(adminUser, project, events, phoneNumber, messageInfo, eventInfos, null);
        }
        
        /// <remarks/>
        public void sendTicket2Async(AdminUser adminUser, string project, Event[] events, Phone phoneNumber, MessageInfo messageInfo, EventInfo[] eventInfos, object userState) {
            if ((this.sendTicket2OperationCompleted == null)) {
                this.sendTicket2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendTicket2OperationCompleted);
            }
            this.InvokeAsync("sendTicket2", new object[] {
                        adminUser,
                        project,
                        events,
                        phoneNumber,
                        messageInfo,
                        eventInfos}, this.sendTicket2OperationCompleted, userState);
        }
        
        private void OnsendTicket2OperationCompleted(object arg) {
            if ((this.sendTicket2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendTicket2Completed(this, new sendTicket2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://services.ticketsendsystem.edeploy/", ResponseNamespace="http://services.ticketsendsystem.edeploy/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TicketInfo[] getTicketStatusFromBarcode([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] AdminUser adminUser, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Event @event, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string barcode) {
            object[] results = this.Invoke("getTicketStatusFromBarcode", new object[] {
                        adminUser,
                        @event,
                        barcode});
            return ((TicketInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getTicketStatusFromBarcodeAsync(AdminUser adminUser, Event @event, string barcode) {
            this.getTicketStatusFromBarcodeAsync(adminUser, @event, barcode, null);
        }
        
        /// <remarks/>
        public void getTicketStatusFromBarcodeAsync(AdminUser adminUser, Event @event, string barcode, object userState) {
            if ((this.getTicketStatusFromBarcodeOperationCompleted == null)) {
                this.getTicketStatusFromBarcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTicketStatusFromBarcodeOperationCompleted);
            }
            this.InvokeAsync("getTicketStatusFromBarcode", new object[] {
                        adminUser,
                        @event,
                        barcode}, this.getTicketStatusFromBarcodeOperationCompleted, userState);
        }
        
        private void OngetTicketStatusFromBarcodeOperationCompleted(object arg) {
            if ((this.getTicketStatusFromBarcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTicketStatusFromBarcodeCompleted(this, new getTicketStatusFromBarcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://services.ticketsendsystem.edeploy/", ResponseNamespace="http://services.ticketsendsystem.edeploy/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getInfoFile([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] AdminUser adminUser, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Event @event) {
            object[] results = this.Invoke("getInfoFile", new object[] {
                        adminUser,
                        @event});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getInfoFileAsync(AdminUser adminUser, Event @event) {
            this.getInfoFileAsync(adminUser, @event, null);
        }
        
        /// <remarks/>
        public void getInfoFileAsync(AdminUser adminUser, Event @event, object userState) {
            if ((this.getInfoFileOperationCompleted == null)) {
                this.getInfoFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInfoFileOperationCompleted);
            }
            this.InvokeAsync("getInfoFile", new object[] {
                        adminUser,
                        @event}, this.getInfoFileOperationCompleted, userState);
        }
        
        private void OngetInfoFileOperationCompleted(object arg) {
            if ((this.getInfoFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInfoFileCompleted(this, new getInfoFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://services.ticketsendsystem.edeploy/", ResponseNamespace="http://services.ticketsendsystem.edeploy/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public validationInfo[] getValidatedBarcodes([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] AdminUser adminUser, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Event @event) {
            object[] results = this.Invoke("getValidatedBarcodes", new object[] {
                        adminUser,
                        @event});
            return ((validationInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getValidatedBarcodesAsync(AdminUser adminUser, Event @event) {
            this.getValidatedBarcodesAsync(adminUser, @event, null);
        }
        
        /// <remarks/>
        public void getValidatedBarcodesAsync(AdminUser adminUser, Event @event, object userState) {
            if ((this.getValidatedBarcodesOperationCompleted == null)) {
                this.getValidatedBarcodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetValidatedBarcodesOperationCompleted);
            }
            this.InvokeAsync("getValidatedBarcodes", new object[] {
                        adminUser,
                        @event}, this.getValidatedBarcodesOperationCompleted, userState);
        }
        
        private void OngetValidatedBarcodesOperationCompleted(object arg) {
            if ((this.getValidatedBarcodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getValidatedBarcodesCompleted(this, new getValidatedBarcodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://services.ticketsendsystem.edeploy/", ResponseNamespace="http://services.ticketsendsystem.edeploy/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int[] sendTicket([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] AdminUser adminUser, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string project, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Event @event, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Phone phoneNumber, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] MessageInfo messageInfo, [System.Xml.Serialization.XmlElementAttribute("ticketInfos", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] TicketInfo[] ticketInfos) {
            object[] results = this.Invoke("sendTicket", new object[] {
                        adminUser,
                        project,
                        @event,
                        phoneNumber,
                        messageInfo,
                        ticketInfos});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void sendTicketAsync(AdminUser adminUser, string project, Event @event, Phone phoneNumber, MessageInfo messageInfo, TicketInfo[] ticketInfos) {
            this.sendTicketAsync(adminUser, project, @event, phoneNumber, messageInfo, ticketInfos, null);
        }
        
        /// <remarks/>
        public void sendTicketAsync(AdminUser adminUser, string project, Event @event, Phone phoneNumber, MessageInfo messageInfo, TicketInfo[] ticketInfos, object userState) {
            if ((this.sendTicketOperationCompleted == null)) {
                this.sendTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendTicketOperationCompleted);
            }
            this.InvokeAsync("sendTicket", new object[] {
                        adminUser,
                        project,
                        @event,
                        phoneNumber,
                        messageInfo,
                        ticketInfos}, this.sendTicketOperationCompleted, userState);
        }
        
        private void OnsendTicketOperationCompleted(object arg) {
            if ((this.sendTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendTicketCompleted(this, new sendTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://services.ticketsendsystem.edeploy/", ResponseNamespace="http://services.ticketsendsystem.edeploy/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EventInfo[] getInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] AdminUser adminUser, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Event @event) {
            object[] results = this.Invoke("getInfo", new object[] {
                        adminUser,
                        @event});
            return ((EventInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getInfoAsync(AdminUser adminUser, Event @event) {
            this.getInfoAsync(adminUser, @event, null);
        }
        
        /// <remarks/>
        public void getInfoAsync(AdminUser adminUser, Event @event, object userState) {
            if ((this.getInfoOperationCompleted == null)) {
                this.getInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInfoOperationCompleted);
            }
            this.InvokeAsync("getInfo", new object[] {
                        adminUser,
                        @event}, this.getInfoOperationCompleted, userState);
        }
        
        private void OngetInfoOperationCompleted(object arg) {
            if ((this.getInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInfoCompleted(this, new getInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.ticketsendsystem.edeploy/")]
    public partial class AdminUser {
        
        private int companyIdField;
        
        private string usernameField;
        
        private string passwordField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private int statusField;
        
        private bool statusFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.ticketsendsystem.edeploy/")]
    public partial class validationInfo {
        
        private string barcodeField;
        
        private System.DateTime validationTimeField;
        
        private bool validationTimeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string barcode {
            get {
                return this.barcodeField;
            }
            set {
                this.barcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime validationTime {
            get {
                return this.validationTimeField;
            }
            set {
                this.validationTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool validationTimeSpecified {
            get {
                return this.validationTimeFieldSpecified;
            }
            set {
                this.validationTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.ticketsendsystem.edeploy/")]
    public partial class EventInfo {
        
        private Phone phoneField;
        
        private TicketInfo[] ticketInfoField;
        
        private Event eventField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Phone phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ticketInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TicketInfo[] ticketInfo {
            get {
                return this.ticketInfoField;
            }
            set {
                this.ticketInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Event @event {
            get {
                return this.eventField;
            }
            set {
                this.eventField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.ticketsendsystem.edeploy/")]
    public partial class Phone {
        
        private string countryCodeField;
        
        private string areaCodeField;
        
        private string phoneNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string countryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string areaCode {
            get {
                return this.areaCodeField;
            }
            set {
                this.areaCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string phoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.ticketsendsystem.edeploy/")]
    public partial class TicketInfo {
        
        private int idField;
        
        private string eventIdField;
        
        private string barcodeField;
        
        private TicketStatus statusField;
        
        private bool statusFieldSpecified;
        
        private string orderIdField;
        
        private string ticketIdField;
        
        private string customerNameField;
        
        private string customerDocumentField;
        
        private phoneSentStatus sentStatusField;
        
        private bool sentStatusFieldSpecified;
        
        private System.DateTime validationDateField;
        
        private bool validationDateFieldSpecified;
        
        private System.DateTime sentDateField;
        
        private bool sentDateFieldSpecified;
        
        private string[] customValuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string eventId {
            get {
                return this.eventIdField;
            }
            set {
                this.eventIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string barcode {
            get {
                return this.barcodeField;
            }
            set {
                this.barcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TicketStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string orderId {
            get {
                return this.orderIdField;
            }
            set {
                this.orderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ticketId {
            get {
                return this.ticketIdField;
            }
            set {
                this.ticketIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string customerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string customerDocument {
            get {
                return this.customerDocumentField;
            }
            set {
                this.customerDocumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public phoneSentStatus sentStatus {
            get {
                return this.sentStatusField;
            }
            set {
                this.sentStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sentStatusSpecified {
            get {
                return this.sentStatusFieldSpecified;
            }
            set {
                this.sentStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime validationDate {
            get {
                return this.validationDateField;
            }
            set {
                this.validationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool validationDateSpecified {
            get {
                return this.validationDateFieldSpecified;
            }
            set {
                this.validationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime sentDate {
            get {
                return this.sentDateField;
            }
            set {
                this.sentDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sentDateSpecified {
            get {
                return this.sentDateFieldSpecified;
            }
            set {
                this.sentDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("customValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] customValues {
            get {
                return this.customValuesField;
            }
            set {
                this.customValuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.ticketsendsystem.edeploy/")]
    public enum TicketStatus {
        
        /// <remarks/>
        CONVIDADO,
        
        /// <remarks/>
        CONFIRMADO,
        
        /// <remarks/>
        VALIDADO_MESA,
        
        /// <remarks/>
        VALIDADO_LEITOR,
        
        /// <remarks/>
        CANCELADO,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.ticketsendsystem.edeploy/")]
    public enum phoneSentStatus {
        
        /// <remarks/>
        CREATED,
        
        /// <remarks/>
        CREATED_WONT_SENT,
        
        /// <remarks/>
        SENT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.ticketsendsystem.edeploy/")]
    public partial class Event {
        
        private string eventIdField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string eventId {
            get {
                return this.eventIdField;
            }
            set {
                this.eventIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.ticketsendsystem.edeploy/")]
    public partial class MessageInfo {
        
        private string vendorField;
        
        private int modelIdField;
        
        private bool modelIdFieldSpecified;
        
        private MessageType messageTypeField;
        
        private bool messageTypeFieldSpecified;
        
        private string textField;
        
        private string codeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string vendor {
            get {
                return this.vendorField;
            }
            set {
                this.vendorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int modelId {
            get {
                return this.modelIdField;
            }
            set {
                this.modelIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool modelIdSpecified {
            get {
                return this.modelIdFieldSpecified;
            }
            set {
                this.modelIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MessageType messageType {
            get {
                return this.messageTypeField;
            }
            set {
                this.messageTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool messageTypeSpecified {
            get {
                return this.messageTypeFieldSpecified;
            }
            set {
                this.messageTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.ticketsendsystem.edeploy/")]
    public enum MessageType {
        
        /// <remarks/>
        EAN8,
        
        /// <remarks/>
        DATAMATRIX,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getTicketStatusFromTicketIdCompletedEventHandler(object sender, getTicketStatusFromTicketIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTicketStatusFromTicketIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTicketStatusFromTicketIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TicketInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TicketInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void setTicketStatus2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addCustomerPhoneStatusCompletedEventHandler(object sender, addCustomerPhoneStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCustomerPhoneStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCustomerPhoneStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void resendTicketCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getTicketStatusFromEventCompletedEventHandler(object sender, getTicketStatusFromEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTicketStatusFromEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTicketStatusFromEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TicketInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TicketInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getEventsCompletedEventHandler(object sender, getEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Event[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Event[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void setTicketStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void sendTicket2CompletedEventHandler(object sender, sendTicket2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendTicket2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendTicket2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getTicketStatusFromBarcodeCompletedEventHandler(object sender, getTicketStatusFromBarcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTicketStatusFromBarcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTicketStatusFromBarcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TicketInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TicketInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getInfoFileCompletedEventHandler(object sender, getInfoFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInfoFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInfoFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getValidatedBarcodesCompletedEventHandler(object sender, getValidatedBarcodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getValidatedBarcodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getValidatedBarcodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public validationInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((validationInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void sendTicketCompletedEventHandler(object sender, sendTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getInfoCompletedEventHandler(object sender, getInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EventInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EventInfo[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
